Index: src/main/java/StatRunner.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import engine.Game;\r\n\r\nimport java.util.Hashtable;\r\nimport java.util.InputMismatchException;\r\nimport java.util.Scanner;\r\n\r\npublic class StatRunner {\r\n\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.println(\"Hello, welcome to the Quoridor's statistic mode\");\r\n        int numbGame = readInt(\"Please choose how many games you want to run : \", scanner);\r\n        System.out.println(\"Please choose the first AI\");\r\n        String firstAI = scanner.next();\r\n        System.out.println(\"Please choose the second AI\");\r\n        String secondAI = scanner.next();\r\n        Hashtable<String, Integer> winTable = new Hashtable<String, Integer>();\r\n        winTable.put(firstAI,0);\r\n        winTable.put(secondAI,0);\r\n        System.out.println(\"Start running games\");\r\n        for (int i=0; i<numbGame; i++) {\r\n            Game game = new Game(firstAI, secondAI);\r\n            game.statLoop(winTable);\r\n            System.out.println(\"--game played--\");\r\n        }\r\n        double ratioAI1 = winTable.get(firstAI).floatValue() / numbGame;\r\n        double ratioAI2 = winTable.get(secondAI).floatValue() / numbGame;\r\n        System.out.println(firstAI + \" ratio : \" + ratioAI1);\r\n        System.out.println(secondAI + \" ratio : \" + ratioAI2);\r\n\r\n    }\r\n\r\n    public static int readInt(String prompt, Scanner scanner) {\r\n        System.out.println(prompt);\r\n        try {\r\n            return scanner.nextInt();\r\n        } catch (InputMismatchException invalidInt) {\r\n            return readInt(\"Invalid entry, please enter a correct integer : \", scanner);\r\n        }\r\n    }\r\n}\r\n
===================================================================
--- src/main/java/StatRunner.java	(revision 13834e175f06674cb7b02c20893535d1582834e0)
+++ src/main/java/engine/StatRunner.java	(date 1587122638700)
@@ -1,3 +1,5 @@
+package engine;
+
 import engine.Game;
 
 import java.util.Hashtable;
Index: src/main/java/gui/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package gui;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.ChoiceBox;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.stage.Stage;\r\n\r\npublic class Menu extends Application {\r\n\r\n    private Scene scene;\r\n    private Button launchButton;\r\n    private Button closeButton;\r\n    private Stage window;\r\n\r\n    private ChoiceBox<String> playerNumber;\r\n    private ChoiceBox<String> firstAIDifficultyMenu;\r\n    private ChoiceBox<String> secondAIDifficultyMenu;\r\n    private ChoiceBox<String> thirdAIDifficultyMenu;\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) {\r\n        window = new Stage();\r\n\r\n        window.setOnCloseRequest(e -> {\r\n            e.consume(); //Say to Java \"Hey, we're handling this ourselves.\"\r\n            closeProgram();\r\n        });\r\n\r\n        closeButton = new Button(\"Close the game\");\r\n        closeButton.setOnAction(e -> closeProgram());\r\n\r\n        window.setTitle(\"Main Menu\");\r\n        window.setMinWidth(600);\r\n        window.setMinHeight(600);\r\n\r\n        launchButton = new Button(\"Launch game!\");\r\n        launchButton.setOnAction(e -> launchGame());\r\n\r\n        Label settings = new Label(\"Settings:\");\r\n\r\n        //Following lines will set difficulty menus for AI. Listeners will follow in real time selection changes.\r\n        // TODO link listeners values to game values replace sout in lambda fuction.\r\n        firstAIDifficultyMenu = new ChoiceBox<>();\r\n        firstAIDifficultyMenu.getItems().addAll(\"Random AI\", \"Easy\", \"Harder\");\r\n        firstAIDifficultyMenu.setValue(\"Random AI\"); //set a default value.\r\n        firstAIDifficultyMenu.getSelectionModel().selectedItemProperty().addListener( (v, oldValue, newValue) -> System.out.println(newValue));\r\n\r\n        secondAIDifficultyMenu = new ChoiceBox<>();\r\n        secondAIDifficultyMenu.getItems().addAll(\"Random AI\", \"Easy\", \"Harder\");\r\n        secondAIDifficultyMenu.setValue(\"Random AI\"); //set a default value.\r\n        secondAIDifficultyMenu.getSelectionModel().selectedItemProperty().addListener( (v, oldValue, newValue) -> System.out.println(newValue));\r\n\r\n        thirdAIDifficultyMenu = new ChoiceBox<>();\r\n        thirdAIDifficultyMenu.getItems().addAll(\"Random AI\", \"Easy\", \"Harder\");\r\n        thirdAIDifficultyMenu.setValue(\"Random AI\"); //set a default value.\r\n        thirdAIDifficultyMenu.getSelectionModel().selectedItemProperty().addListener( (v, oldValue, newValue) -> System.out.println(newValue));\r\n\r\n        //Player number menus, will define which difficulty options are enabled.\r\n        playerNumber = new ChoiceBox<>();\r\n        playerNumber.getItems().addAll( \"2 Players\", \"2 Players (1 AI)\",\r\n                \"4 Players\", \"4 Players (1 AI)\", \"4 Players (2 AI)\", \"4 Players (3 AI)\");\r\n        playerNumber.setValue(\"2 Players\"); //set a default value.\r\n        playerNumber.getSelectionModel().selectedItemProperty().addListener( (v, oldValue, newValue) -> {\r\n            if (newValue.equals(\"2 Players (1 AI)\")){\r\n                Label difficulty = new Label(\"AI difficulty:\");\r\n                // TODO set firstAIDifficultyMenu to layout\r\n            }\r\n            else if(newValue.equals(\"4 Players (1 AI)\")){\r\n                Label difficulty = new Label(\"AI difficulty:\");\r\n                // TODO set firstAIDifficultyMenu to layout\r\n            }\r\n            else if (newValue.equals(\"4 Players (2 AI)\")){\r\n                Label firstDifficulty = new Label(\"First AI difficulty:\");\r\n                Label secondDifficulty = new Label(\"Second AI difficulty:\");\r\n                // TODO set both difficulty menus to layout\r\n            }\r\n            else if (newValue.equals(\"4 Players (3 AI)\")){\r\n                Label firstDifficulty = new Label(\"First AI difficulty:\");\r\n                Label secondDifficulty = new Label(\"Second AI difficulty:\");\r\n                Label thirdDifficulty = new Label(\"Third AI difficulty:\");\r\n                // TODO set all difficulty menus to layout\r\n            }\r\n            // TODO set human players\r\n        });\r\n\r\n\r\n\r\n\r\n        window.show();\r\n\r\n\r\n    }\r\n\r\n    private void closeProgram(){\r\n        boolean answer = ConfirmBox.Display(\"Quit confirmation\",\r\n                \"Are your really sure you want to quit? You might want to save first.\");\r\n        if (answer) {\r\n            window.close();\r\n        }\r\n    }\r\n\r\n    private void launchGame(){\r\n        boolean answer = ConfirmBox.Display(\"Launch confirmation\",\r\n                \"Are you sure you want to launch the game? Be sure you selected the right settings.\");\r\n        if (answer){\r\n            // TODO implement game launch!\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/gui/Menu.java	(revision 13834e175f06674cb7b02c20893535d1582834e0)
+++ src/main/java/gui/Menu.java	(date 1587122864979)
@@ -46,7 +46,7 @@
         Label settings = new Label("Settings:");
 
         //Following lines will set difficulty menus for AI. Listeners will follow in real time selection changes.
-        // TODO link listeners values to game values replace sout in lambda fuction.
+        // TODO link listeners values to game values replace sout in lambda function.
         firstAIDifficultyMenu = new ChoiceBox<>();
         firstAIDifficultyMenu.getItems().addAll("Random AI", "Easy", "Harder");
         firstAIDifficultyMenu.setValue("Random AI"); //set a default value.
@@ -66,7 +66,7 @@
         playerNumber = new ChoiceBox<>();
         playerNumber.getItems().addAll( "2 Players", "2 Players (1 AI)",
                 "4 Players", "4 Players (1 AI)", "4 Players (2 AI)", "4 Players (3 AI)");
-        playerNumber.setValue("2 Players"); //set a default value.
+        playerNumber.setValue("2 Players (1 AI)"); //set a default value.
         playerNumber.getSelectionModel().selectedItemProperty().addListener( (v, oldValue, newValue) -> {
             if (newValue.equals("2 Players (1 AI)")){
                 Label difficulty = new Label("AI difficulty:");
Index: src/module-info.java
===================================================================
--- src/module-info.java	(revision 13834e175f06674cb7b02c20893535d1582834e0)
+++ src/module-info.java	(revision 13834e175f06674cb7b02c20893535d1582834e0)
@@ -1,11 +0,0 @@
-module MICHEL.SURIN.main {
-    requires javafx.fxml;
-    requires javafx.controls;
-    requires javafx.base;
-    requires javafx.graphics;
-    requires java.desktop;
-
-    opens main;
-    opens test;
-
-}
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/uiDesigner.xml	(date 1587122639529)
+++ .idea/uiDesigner.xml	(date 1587122639529)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
